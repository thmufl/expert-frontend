[{"/Users/thomas/Development/xopt-frontend/src/reportWebVitals.js":"1","/Users/thomas/Development/xopt-frontend/src/App.tsx":"2","/Users/thomas/Development/xopt-frontend/src/components/SideNav.tsx":"3","/Users/thomas/Development/xopt-frontend/src/components/Home.tsx":"4","/Users/thomas/Development/xopt-frontend/src/index.tsx":"5","/Users/thomas/Development/xopt-frontend/src/serviceWorker.ts":"6","/Users/thomas/Development/expert-frontend/src/index.tsx":"7","/Users/thomas/Development/expert-frontend/src/serviceWorker.ts":"8","/Users/thomas/Development/expert-frontend/src/App.tsx":"9","/Users/thomas/Development/expert-frontend/src/components/SideNav.tsx":"10","/Users/thomas/Development/expert-frontend/src/components/Home.tsx":"11","/Users/thomas/Development/expert-frontend/src/components/OrganisationList.tsx":"12","/Users/thomas/Development/expert-frontend/src/components/OrganisationDetails.tsx":"13","/Users/thomas/Development/expert-frontend/src/components/SkillDefinitionDetails.tsx":"14","/Users/thomas/Development/expert-frontend/src/components/SkillDefinitionList.tsx":"15","/Users/thomas/Development/expert-frontend/src/components/RegisterForm.tsx":"16","/Users/thomas/Development/expert-frontend/src/components/LoginForm.tsx":"17","/Users/thomas/Development/expert-frontend/src/services/authenticationService.ts":"18","/Users/thomas/Development/expert-frontend/src/components/FindExpertsForm.tsx":"19","/Users/thomas/Development/expert-frontend/src/services/expertsService.ts":"20"},{"size":362,"mtime":1612188794936,"results":"21","hashOfConfig":"22"},{"size":829,"mtime":1612190826165,"results":"23","hashOfConfig":"22"},{"size":506,"mtime":1612190689254,"results":"24","hashOfConfig":"22"},{"size":619,"mtime":1612190738544,"results":"25","hashOfConfig":"22"},{"size":669,"mtime":1612192086266,"results":"26","hashOfConfig":"22"},{"size":5295,"mtime":1606147692094,"results":"27","hashOfConfig":"22"},{"size":669,"mtime":1612192086266,"results":"28","hashOfConfig":"29"},{"size":5295,"mtime":1606147692094,"results":"30","hashOfConfig":"29"},{"size":2519,"mtime":1613722973883,"results":"31","hashOfConfig":"29"},{"size":506,"mtime":1612190689254,"results":"32","hashOfConfig":"29"},{"size":619,"mtime":1612190738544,"results":"33","hashOfConfig":"29"},{"size":1175,"mtime":1613559532938,"results":"34","hashOfConfig":"29"},{"size":1983,"mtime":1613560316467,"results":"35","hashOfConfig":"29"},{"size":1066,"mtime":1613129110331,"results":"36","hashOfConfig":"29"},{"size":1166,"mtime":1613129207193,"results":"37","hashOfConfig":"29"},{"size":2647,"mtime":1613490561989,"results":"38","hashOfConfig":"29"},{"size":2087,"mtime":1613556040896,"results":"39","hashOfConfig":"29"},{"size":1334,"mtime":1613555629790,"results":"40","hashOfConfig":"29"},{"size":2453,"mtime":1613768865817,"results":"41","hashOfConfig":"29"},{"size":653,"mtime":1613757817602,"results":"42","hashOfConfig":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1huo53e",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ue6eft",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thomas/Development/xopt-frontend/src/reportWebVitals.js",[],["90","91"],"/Users/thomas/Development/xopt-frontend/src/App.tsx",[],["92","93"],"/Users/thomas/Development/xopt-frontend/src/components/SideNav.tsx",[],"/Users/thomas/Development/xopt-frontend/src/components/Home.tsx",[],["94","95"],"/Users/thomas/Development/xopt-frontend/src/index.tsx",[],"/Users/thomas/Development/xopt-frontend/src/serviceWorker.ts",[],"/Users/thomas/Development/expert-frontend/src/index.tsx",[],["96","97"],"/Users/thomas/Development/expert-frontend/src/serviceWorker.ts",[],"/Users/thomas/Development/expert-frontend/src/App.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/SideNav.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/Home.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/OrganisationList.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/OrganisationDetails.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/SkillDefinitionDetails.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/SkillDefinitionList.tsx",[],"/Users/thomas/Development/expert-frontend/src/components/RegisterForm.tsx",["98","99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport User from \"../interfaces/user\";\n\nconst RegisterForm = (props: any) => {\n\n  const defaultUser: User = {\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    isAdmin: false,\n  };\n\n  const [user, setUser] = useState<User>(defaultUser);\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLInputElement| HTMLTextAreaElement>): void => {\n    event.preventDefault();\n    const { name, value } = event.currentTarget;\n    setUser({ ...user, [name]: value });\n  }\n\n  const handleSubmit = (event: React.FormEvent<EventTarget>): void => {\n  };\n\n  return (\n    <>\n      <h1>Register</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formFirstname\">\n          <Form.Label>Firstname</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"firstname\"\n            placeholder=\"Enter your firstname\"\n            onChange={handleUserChange}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your data with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formLastname\">\n          <Form.Label>Lastname</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"lastname\"\n            placeholder=\"Enter your lastname\"\n            onChange={handleUserChange}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your data with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleUserChange}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your data with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleUserChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n\n      <p>{JSON.stringify(user)}</p>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","/Users/thomas/Development/expert-frontend/src/components/LoginForm.tsx",["102","103"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, ListGroup } from \"react-bootstrap\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nimport authenticationService from \"../services/authenticationService\";\n\nconst LoginForm = (props: any) => {\n\tconst [credentials, setCredentials] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst handleChange = (\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n\t) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.currentTarget;\n\t\tsetCredentials({ ...credentials, [name]: value });\n\t};\n\n\tconst handleSubmit = async (event: React.FormEvent<EventTarget>) => {\n\t\tevent.preventDefault();\n\t\tconst result = await authenticationService.login(\n\t\t\tcredentials.username,\n\t\t\tcredentials.password\n\t\t);\n    setCredentials({\n      username: \"\",\n      password: \"\",\n    });\n\t\tif (result.error) {\n\t\t\tconsole.error(result.error);\n\t\t}\n\t};\n\n\treturn authenticationService.currentUser() ? (\n\t\t<Redirect to=\"/home\" />\n\t) : (\n\t\t<>\n\t\t\t<h1>Login</h1>\n\n\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t<Form.Group controlId=\"formEmail\">\n\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tplaceholder=\"Enter your email\"\n\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\tWe'll never share your data with anyone else.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formPassword\">\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\tWe'll never share your data with anyone else.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"mr-5\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t\t<Link className=\"mr-5\" to=\"/register\">\n\t\t\t\t\tRegister\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/resetPassword\">Reset Password</Link>\n\t\t\t</Form>\n\t\t</>\n\t);\n};\n\nexport default LoginForm;\n","/Users/thomas/Development/expert-frontend/src/services/authenticationService.ts",[],"/Users/thomas/Development/expert-frontend/src/components/FindExpertsForm.tsx",["104","105","106"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport User from \"../interfaces/user\";\nimport Expert from \"../interfaces/expert\";\nimport ISkill from \"../interfaces/expert\";\n\nimport expertsService from \"../services/expertsService\";\n\nconst FindExpertsForm = (props: any) => {\n\tconst [query, setQuery] = useState({\n\t\tname: \"\",\n\t\tconfirmed: true,\n\t});\n\n\tconst [experts, setExperts] = useState(Array<Expert>());\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n\t\tconst target = event.target;\n\t\tconst { type, name } = target;\n\t\tconst value = type === \"checkbox\" ? target.checked : target.value;\n\t\tevent.preventDefault();\n\t\tsetQuery({ ...query, [name]: value });\n\t};\n\n\tuseEffect(() => {\n\t\tconst reload = async () => {\n\t\t\tlet result = new Array<Expert>();\n\t\t\tif (query.name.length > 0) {\n\t\t\t\tresult = await expertsService.find(\n\t\t\t\t\tquery.name,\n\t\t\t\t\tquery.confirmed ? \"confirmed\" : \"any\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tsetExperts(result);\n\t\t};\n\t\treload();\n\t}, [query, setExperts]);\n\n\tconst handleSubmit = (event: React.FormEvent<EventTarget>): void => {};\n\n\tconst getExpertItems = () =>\n\t\texperts.map((expert, index) => (\n\t\t\t<ListGroup.Item key={index.toString()} action>\n\t\t\t\t<Link to={`experts/${expert._id}`}>{expert.name}</Link> -{\" \"}\n\t\t\t\t{expert.location} - score: {expert.score}\n\t\t\t\t{getSkillItems(expert)}\n\t\t\t</ListGroup.Item>\n\t\t));\n\n\tconst getSkillItems = (expert: Expert) => {\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{expert.skills.map((skill, index) => (\n\t\t\t\t\t<li key={index.toString()}>{skill.name} - {skill.status}</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Find Expert</h1>\n\n\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t<Form.Group controlId=\"formSkillName\">\n\t\t\t\t\t<Form.Label>Skill</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tplaceholder=\"Enter your search\"\n\t\t\t\t\t\tvalue={query.name}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\tWe'll never share your data with anyone else.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group controlId=\"formSkillConfirmed\">\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\tname=\"confirmed\"\n\t\t\t\t\t\tlabel=\"Confirmed only\"\n\t\t\t\t\t\tchecked={query.confirmed}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<ListGroup>{getExpertItems()}</ListGroup>\n\t\t\t</Form>\n\n\t\t\t<p>{JSON.stringify(query)}</p>\n\t\t</>\n\t);\n};\n\nexport default FindExpertsForm;\n","/Users/thomas/Development/expert-frontend/src/services/expertsService.ts",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"121","line":2,"column":24,"nodeType":"119","messageId":"120","endLine":2,"endColumn":33},{"ruleId":"117","severity":1,"message":"122","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"123","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"121","line":2,"column":24,"nodeType":"119","messageId":"120","endLine":2,"endColumn":33},{"ruleId":"117","severity":1,"message":"124","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":22},{"ruleId":"117","severity":1,"message":"125","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":12},{"ruleId":"117","severity":1,"message":"126","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":14},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],["127"],["128"],["127"],["128"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'User' is defined but never used.","'ISkill' is defined but never used.","no-global-assign","no-unsafe-negation"]